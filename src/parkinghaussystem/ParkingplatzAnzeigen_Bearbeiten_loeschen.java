/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package parkinghaussystem;

import Dao.DBOperations;
import ParkhausClasses.Parketage;
import ParkhausClasses.Parkplatz;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author tn
 */
public class ParkingplatzAnzeigen_Bearbeiten_loeschen extends javax.swing.JFrame {

    /**
     * Creates new form ParkingplatzAnzeigen_Bearbeiten_loeschen
     */
    public ParkingplatzAnzeigen_Bearbeiten_loeschen() {

        initComponents();
        btnAktualisieren.setEnabled(false);
        setDefaultCloseOperation(ParkingplatzAnzeigen_Bearbeiten_loeschen.DISPOSE_ON_CLOSE);
    }

    public void validateField() {
        String name = txtParplatzName.getText();
        String isbelegt = (String) ComboboxIsbelegt.getSelectedItem();
        if (!name.equals("") && isbelegt != null) {
            btnAktualisieren.setEnabled(true);
        } else {
            btnAktualisieren.setEnabled(false);
        }
    }
    // Setzt das Formular zurück.

    public void clearForm() {

        txtParplatzName.setText("");
        labeliD.setText("");

        ComboboxIsbelegt.setSelectedIndex(0);
        updateParkplatzTable();

        btnAktualisieren.setEnabled(false);
        btnLoeschen.setEnabled(false);
    }

    private void resetFormular() {
        txtParplatzName.setText("");
        ComboboxIsbelegt.getSelectedItem();

    }

    public void updateEtagenTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        // Daten aus der Datenbank abrufen
        List<Parketage> etagenListe = DBOperations.getAlleEtagen();

        // Füge die Daten in das TableModel ein
        for (Parketage etage : etagenListe) {
            model.addRow(new Object[]{etage.getId(), etage.getEtagenName()});
        }
    }

    public void updateParkplatzTable() {
        List<Parkplatz> parkplatzListe = DBOperations.getAllParkplaetze();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        for (Parkplatz parkplatz : parkplatzListe) {
            model.addRow(new Object[]{
                parkplatz.getId(),
                parkplatz.getParkplatzname(),
                parkplatz.getEtagenname(),
                parkplatz.isIstBelegt() ? "Belegt" : "Frei"
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtParplatzName = new javax.swing.JTextField();
        labeliD = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnAktualisieren = new javax.swing.JButton();
        btnLoeschen = new javax.swing.JButton();
        btnLeeren = new javax.swing.JButton();
        ComboboxIsbelegt = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 20, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Parkplatz Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 120, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Statut");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 80, 20));

        txtParplatzName.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        txtParplatzName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParplatzNameKeyReleased(evt);
            }
        });
        getContentPane().add(txtParplatzName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 290, -1));

        labeliD.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        labeliD.setForeground(new java.awt.Color(0, 0, 0));
        labeliD.setText("00");
        getContentPane().add(labeliD, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 50, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "ParkplatzName", "Etage", "IsBelegt"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 50, 450, 530));

        jLabel5.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Parkingplatz Anzeigen Bearbeiten & löschen");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 510, -1));

        btnAktualisieren.setBackground(new java.awt.Color(58, 101, 143));
        btnAktualisieren.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        btnAktualisieren.setForeground(new java.awt.Color(255, 255, 255));
        btnAktualisieren.setText("Aktualisieren");
        btnAktualisieren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAktualisierenActionPerformed(evt);
            }
        });
        getContentPane().add(btnAktualisieren, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, -1, 30));

        btnLoeschen.setBackground(new java.awt.Color(58, 101, 143));
        btnLoeschen.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        btnLoeschen.setForeground(new java.awt.Color(255, 255, 255));
        btnLoeschen.setText("Löschen");
        btnLoeschen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoeschenActionPerformed(evt);
            }
        });
        getContentPane().add(btnLoeschen, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 90, 30));

        btnLeeren.setBackground(new java.awt.Color(58, 101, 143));
        btnLeeren.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        btnLeeren.setForeground(new java.awt.Color(255, 255, 255));
        btnLeeren.setText("leeren");
        btnLeeren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerenActionPerformed(evt);
            }
        });
        getContentPane().add(btnLeeren, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, -1, 30));

        ComboboxIsbelegt.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        ComboboxIsbelegt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Frei", "Belegt" }));
        getContentPane().add(ComboboxIsbelegt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 290, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("X");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 0, 20, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("_");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 0, 20, 20));

        jButton1.setBackground(new java.awt.Color(135, 135, 79));
        jButton1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Zurück zu Admin Verwaltung Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Bilder/Background_Big.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int index = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();
        String id = model.getValueAt(index, 0).toString();
        labeliD.setText(id);
        String parkplatzName = model.getValueAt(index, 1).toString();
        txtParplatzName.setText(parkplatzName);
        String etagenName = model.getValueAt(index, 2).toString();

        String istBelegt = model.getValueAt(index, 3).toString();
        ComboboxIsbelegt.setSelectedItem(istBelegt);

        btnAktualisieren.setEnabled(true);
        btnLoeschen.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnAktualisierenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAktualisierenActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(labeliD.getText());
        String parkplatzName = txtParplatzName.getText();
        boolean istBelegt = ComboboxIsbelegt.getSelectedItem().equals("Ja");

        // Aktualisieren Sie den Parkplatz.
        boolean success = DBOperations.updateParkplatz(id, parkplatzName, "Ja"); // oder "Nein"

        if (success) {

            JOptionPane.showMessageDialog(null, "Parkplatz aktualisiert");
            updateParkplatzTable();
            clearForm();
            resetFormular();
        } else {

            JOptionPane.showMessageDialog(null, "Aktualisierung fehlgeschlagen");
        }
    }//GEN-LAST:event_btnAktualisierenActionPerformed

    private void txtParplatzNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParplatzNameKeyReleased
        // TODO add your handling code here:
        validateField();
    }//GEN-LAST:event_txtParplatzNameKeyReleased

    private void btnLoeschenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoeschenActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(labeliD.getText());

        // Anzeigen einer Bestätigungsdialogbox
        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Sind Sie sicher, dass Sie den Parkplatz löschen möchten?",
                "Löschen bestätigen",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {
            boolean success = DBOperations.deleteParkplatz(id);

            if (success) {
                JOptionPane.showMessageDialog(null, "Parkplatz gelöscht");
                updateParkplatzTable();
                resetFormular();

            } else {
                JOptionPane.showMessageDialog(null, "Löschung fehlgeschlagen");
            }
        }
    }//GEN-LAST:event_btnLoeschenActionPerformed

    private void btnLeerenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerenActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ParkingplatzAnzeigen_Bearbeiten_loeschen().setVisible(true);
    }//GEN-LAST:event_btnLeerenActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        List<Parkplatz> list = DBOperations.getAllParkplaetze();
        for (Parkplatz parkplatz : list) {
            dtm.addRow(new Object[]{parkplatz.getId(), parkplatz.getParkplatzname(), parkplatz.getEtagenname(), parkplatz.isIstBelegt()});
        }
    }//GEN-LAST:event_formComponentShown

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        setExtendedState(ParkingplatzAnzeigen_Bearbeiten_loeschen.ICONIFIED);

    }//GEN-LAST:event_jLabel7MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new AdminVerwaltung().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ParkingplatzAnzeigen_Bearbeiten_loeschen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ParkingplatzAnzeigen_Bearbeiten_loeschen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ParkingplatzAnzeigen_Bearbeiten_loeschen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ParkingplatzAnzeigen_Bearbeiten_loeschen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ParkingplatzAnzeigen_Bearbeiten_loeschen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboboxIsbelegt;
    private javax.swing.JButton btnAktualisieren;
    private javax.swing.JButton btnLeeren;
    private javax.swing.JButton btnLoeschen;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labeliD;
    private javax.swing.JTextField txtParplatzName;
    // End of variables declaration//GEN-END:variables
}
